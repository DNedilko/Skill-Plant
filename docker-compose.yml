version: '3.4'

services:

  datascience-notebook:
    image: jupyter/datascience-notebook
    volumes:
      - /var/www/jupyter/notebooks:/home/jovyan/work
    ports:
      - 8888:8888
    container_name: datascience-notebook-container

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost


  database:
    container_name: postgresdb
    image: postgres:14
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
#     SQL to create tables in db
      - ./create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
#      load starter data
      - ./fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    environment:
              POSTGRES_USER: ${POSTGRES_USER:-postgres}
              POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
              POSTGRES_DB: SkillPlant
              PGDATA: /data/postgres

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@postgres.com
      PGADMIN_DEFAULT_PASSWORD: postgres
#      PGADMIN_LISTEN_PORT = 80

    ports:
      - "5050:80"

  cron:
    image: demo-image:latest
    entrypoint: /bin/bash
    command: [ "cron", "-f" ]
    volumes:
      - data:/app-data

volumes:
  data:
  pgdata:
